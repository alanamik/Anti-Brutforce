// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AuthCheckOKCode is the HTTP code returned for type AuthCheckOK
const AuthCheckOKCode int = 200

/*AuthCheckOK Did passed

swagger:response authCheckOK
*/
type AuthCheckOK struct {

	/*
	  In: Body
	*/
	Payload *AuthCheckOKBody `json:"body,omitempty"`
}

// NewAuthCheckOK creates AuthCheckOK with default headers values
func NewAuthCheckOK() *AuthCheckOK {

	return &AuthCheckOK{}
}

// WithPayload adds the payload to the auth check o k response
func (o *AuthCheckOK) WithPayload(payload *AuthCheckOKBody) *AuthCheckOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth check o k response
func (o *AuthCheckOK) SetPayload(payload *AuthCheckOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthCheckOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AuthCheckInternalServerErrorCode is the HTTP code returned for type AuthCheckInternalServerError
const AuthCheckInternalServerErrorCode int = 500

/*AuthCheckInternalServerError Didn't passed

swagger:response authCheckInternalServerError
*/
type AuthCheckInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *AuthCheckInternalServerErrorBody `json:"body,omitempty"`
}

// NewAuthCheckInternalServerError creates AuthCheckInternalServerError with default headers values
func NewAuthCheckInternalServerError() *AuthCheckInternalServerError {

	return &AuthCheckInternalServerError{}
}

// WithPayload adds the payload to the auth check internal server error response
func (o *AuthCheckInternalServerError) WithPayload(payload *AuthCheckInternalServerErrorBody) *AuthCheckInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth check internal server error response
func (o *AuthCheckInternalServerError) SetPayload(payload *AuthCheckInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthCheckInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
